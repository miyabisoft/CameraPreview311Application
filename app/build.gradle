apply plugin: 'com.android.model.library'
model {
    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.2"

        defaultConfig.with {
            minSdkVersion.apiLevel = 22
            targetSdkVersion.apiLevel = 23
        }
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.txt'))
        }
    }

    android.ndk {
        moduleName = "cameralib"
        cppFlags.add("-Werror")
        ldLibs.addAll(['android', "m","log", "jnigraphics", "GLESv2"])
    }

    android.productFlavors {
            // for detailed abiFilter descriptions, refer to "Supported ABIs" @
            // https://developer.android.com/ndk/guides/abis.html#sa
            create("arm") {
                ndk.abiFilters.add("armeabi")
            }
            create("arm7") {
                ndk.abiFilters.add("armeabi-v7a")
            }
            create("arm8") {
                ndk.abiFilters.add("arm64-v8a")
            }
            create("x86") {
                ndk.abiFilters.add("x86")
            }
            create("x86-64") {
                ndk.abiFilters.add("x86_64")
            }
            create("mips") {
                ndk.abiFilters.add("mips")
            }
            create("mips-64") {
                ndk.abiFilters.add("mips64")
            }
            // To include all cpu architectures, leaves abiFilters empty
            create("all")
        }

    android.sources {
        main {
            jniLibs {
                source {
                    srcDir 'src/main/jniLibs'
                }
            }
        }
    }

}

dependencies {
        compile fileTree(dir: 'libs', include: ['*.jar'])
        compile files('/Applications/Unity/PlaybackEngines/AndroidPlayer/Variations/il2cpp/Release/Classes/classes.jar')
        testCompile 'junit:junit:4.12'
        compile 'com.android.support:appcompat-v7:23.2.0'
}
task clearJar(type: Delete) {
    delete 'build/libs' + 'CameraPluginModule.jar'
}
task makeJar(type: Copy) {
    from('build/intermediates/bundles/all/release/')
    into('release/')
    include('classes.jar')
    rename('classes.jar', 'CameraPluginModule.jar')
}
makeJar.dependsOn(clearJar, build)
